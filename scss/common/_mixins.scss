/*******************************************
*       COMMON MIXINS AND KEYFRAMES        *
*******************************************/

@mixin c-border-radius($top-right, $bottom-right, $bottom-left, $top-left) {
    -webkit-border-top-right-radius: $top-right;
    -webkit-border-bottom-right-radius: $bottom-right;
    -webkit-border-bottom-left-radius: $bottom-left;
    -webkit-border-top-left-radius: $top-left;
    -moz-border-radius-topright: $top-right;
    -moz-border-radius-bottomright: $bottom-right;
    -moz-border-radius-bottomleft: $bottom-left;
    -moz-border-radius-topleft: $top-left;
    border-top-right-radius: $top-right;
    border-bottom-right-radius: $bottom-right;
    border-bottom-left-radius: $bottom-left;
    border-top-left-radius: $top-left;
}

@mixin c-transition($properties, $duration, $function, $delay) {
    -webkit-transition: $properties $duration $function $delay;
    -moz-transition: $properties $duration $function $delay;
    transition: $properties $duration $function $delay;
}

@mixin c-box-shadow-outer($left, $top, $blur, $spread, $color) {
    -webkit-box-shadow: $left $top $blur $spread $color;
    -moz-box-shadow: $left $top $blur $spread $color;
    box-shadow: $left $top $blur $spread $color;
}

@mixin c-box-shadow-inner-many($array_style) {
    $cbsim_style: "";
    $cbsim_length: length($array_style);
    @for $i from 1 through $cbsim_length {
        $cbsim_style: #{$cbsim_style}#{nth($array_style,$i)};
        @if $i < $cbsim_length {
            $cbsim_style: #{$cbsim_style","}
        }
    }
    box-shadow: inset $cbsim_style;
    -webkit-box-shadow: inset $cbsim_style;
    -moz-box-shadow: inset $cbsim_style;
    -o-box-shadow: inset $cbsim_style;
}

@mixin c-animation($name, $duration, $function, $delay, $iteration) {
    -webkit-animation: $name $duration $function $delay $iteration;
    -moz-animation: $name $duration $function $delay $iteration;
    animation: $name $duration $function $delay $iteration;
}

@mixin c-background-image($size:'cover', $color:#eee, $hight:100vh) {
    background-color: $color;
    background-position: center;
    background-repeat: no-repeat;
    background-size: unquote($size);
    height: $hight;
    display: block;
    width: 100%;
    position: relative;
}

@mixin c-background-overlay($pseudo:'after') {
    position: relative;
    * {
        z-index: 2;
    }
    &:after,
    &:before {
        z-index: 1;
    }
    @if($pseudo=='after') {
        &:after {
            content: '';
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    }
    @else if($pseudo=='before') {
        &:before {
            content: '';
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    }
}


/* SLICK SLIDER */

@mixin slick__single-full($height:100vh) {
    .jsslick {
        &__single__slider {
            position: relative;
        }
        &__item {
            @include c-background-image('cover', $height);
            display: -webkit-flex;
            display: flex;
            -webkit-flex-wrap: wrap;
            flex-wrap: wrap;
            -webkit-align-content: center;
            align-content: center;
            -webkit-align-items: center;
            align-items: center;
            &.slick-slide {
                display: -webkit-flex;
                display: flex;
            }
            .text-right {
                color: #fff;
            }
            .main-title {
                font-size: 50px;
            }
            .sub-title {
                font-size: 36px;
            }
            @media all and (max-width: $sm - 1) {
                .main-title {
                    font-size: 36px;
                }
                .sub-title {
                    font-size: 26px;
                }
            }
        }
    }
    &.arrow-inside {
        .slick-arrow {
            &.slick-prev {
                left: 25px;
            }
            &.slick-next {
                right: 25px;
            }
        }
    }
}


/* END SLICK SLIDER */


/*====================================================
                        KEY FRAME
=====================================================*/


@mixin d_flex($width){
	display: -webkit-flex;
	display: flex;
	width: $width;
	-webkit-flex-direction: row;
	flex-direction: row;
	-webkit-flex-wrap: wrap;
	flex-wrap: wrap;
}

@mixin flex_basis($width){
	-webkit-flex: 0 0 $width;
	flex: 0 0 $width;
	-webkit-flex-basis: $width;
	flex-basis: $width;
	max-width: $width;
}


/**
* @todo Use for loop 
**/

/**
* Grid 3-2-1 
*/
@mixin grid_3_2_1($grid_gap) {
	$total_width: 100%;
	$grid_total_gap: (2 * $grid_gap);
	@include d_flex(calc(100% + #{$grid_total_gap}));
	margin-left: -#{$grid_gap};
	margin-right: -#{$grid_gap};
	.grid{
		@include flex_basis($total_width/3);
		padding-left: $grid_gap;
		padding-right: $grid_gap;
		@media all and (min-width: 768px) and (max-width: 991px){
			@include flex_basis($total_width/2)
		}
		@media all and (max-width: 767px){
			@include flex_basis($total_width);
		}
	}
}

@mixin grid_4_2_1($grid_gap) {
	$total_width: 100%;
	$grid_total_gap: (2 * $grid_gap);
	@include d_flex(calc(100% + #{$grid_total_gap}));
	margin-left: -#{$grid_gap};
	margin-right: -#{$grid_gap};
	.grid{
		@include flex_basis($total_width/4);
		padding-left: $grid_gap;
		padding-right: $grid_gap;
		@media all and (min-width: 992px) and (max-width: 1199px){
			@include flex_basis($total_width/3);
		}
		@media all and (min-width: 768px) and (max-width: 991px){
			@include flex_basis($total_width/2);
		}
		@media all and (max-width: 767px){
			@include flex_basis($total_width);
		}
	}
}